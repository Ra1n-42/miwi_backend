FROM python:3.13.0-slim

RUN pip install poetry==1.8.4
ARG POSTGRES_USER
ARG POSTGRES_PASSWORD
ARG POSTGRES_DB
ARG POSTGRES_HOST
ARG DEV_CLIENT_ID
ARG DEV_CLIENT_SECRET
ARG DEV_REDIRECT_URL_AFTER_LOGIN
ARG PROD_CLIENT_ID
ARG PROD_CLIENT_SECRET
ARG PROD_REDIRECT_URL_AFTER_LOGIN
ARG JWT_Token
ARG JWT_Token_SECRET
ARG Account_ID
ARG TWITCH_STREAMER_ID
ARG TWITCH_STREAMER_SECRET

# Setze diese ARGs als ENVs im Image
ENV POSTGRES_USER=$POSTGRES_USER
ENV POSTGRES_PASSWORD=$POSTGRES_PASSWORD
ENV POSTGRES_DB=$POSTGRES_DB
ENV POSTGRES_HOST=$POSTGRES_HOST
ENV DEV_CLIENT_ID=$DEV_CLIENT_ID
ENV DEV_CLIENT_SECRET=$DEV_CLIENT_SECRET
ENV DEV_REDIRECT_URL_AFTER_LOGIN=$DEV_REDIRECT_URL_AFTER_LOGIN
ENV PROD_CLIENT_ID=$PROD_CLIENT_ID
ENV PROD_CLIENT_SECRET=$PROD_CLIENT_SECRET
ENV PROD_REDIRECT_URL_AFTER_LOGIN=$PROD_REDIRECT_URL_AFTER_LOGIN
ENV JWT_Token=$JWT_Token
ENV Account_ID=$Account_ID
ENV TWITCH_STREAMER_ID=$TWITCH_STREAMER_ID
ENV TWITCH_STREAMER_SECRET=$TWITCH_STREAMER_SECRET
ENV JWT_TOKEN_SECRET=$JWT_TOKEN_SECRET

ENV POETRY_NO_INTERACTION=1 \
    POETRY_VIRTUALENVS_IN_PROJECT=1 \
    POETRY_VIRTUALENVS_CREATE=1 \
    POETRY_CACHE_DIR=/tmp/poetry_cache

WORKDIR /app

COPY pyproject.toml poetry.lock ./
RUN touch README.md

# Installiere nur die Abh√§ngigkeiten (ohne das Projekt selbst)(TEST)
# RUN poetry install --no-dev --no-root

COPY app app

EXPOSE 8000

RUN poetry install

CMD ["/bin/sh", "-c", "poetry run uvicorn app.main:app --host 0.0.0.0 --port 8000"]

