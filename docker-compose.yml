services:
  # mysql_server:
  #   build:
  #       context: ./mysql
  #   image: ghcr.io/ra1n-42/miwi/mysql:latest
  #   restart: always
  #   environment:
  #     MYSQL_USER: ${MYSQL_USER}
  #     MYSQL_PASSWORD: ${MYSQL_USER}
  #     MYSQL_DATABASE: miwi_database
  #     MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
  #   volumes:
  #     - ./mysql_database:/var/lib/mysql
  #   ports:
  #     - "3306:3306"
  #   healthcheck:
  #     test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5
  # postgres:
  #   image: postgres:17.4-alpine3.21
  #   container_name: postgres
  #   environment:
  #     POSTGRES_USER: ${POSTGRES_USER}
  #     POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  #     POSTGRES_DB: ${POSTGRES_DB}
  #   ports:
  #     - "5432:5432"
  #   mem_limit: 4g
  #   mem_reservation: 4g
  #   volumes:
  #     - ./postgres_database:/var/lib/postgresql/data
  # pgadmin:
  #   image: dpage/pgadmin4
  #   container_name: pgadmin4_container
  #   restart: unless-stopped
  #   ports:
  #     - "8888:80"
  #   mem_limit: 4g
  #   mem_reservation: 4g
  #   environment:
  #     PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
  #     PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
  #   volumes:
  #     - ./pgadmin-data:/var/lib/pgadmin

  app_backend:
    build:
      context: .  # Root-Verzeichnis als Build-Kontext
      dockerfile: app/Dockerfile  # Dockerfile befindet sich in app/
      args:
        POSTGRES_USER: ${POSTGRES_USER}
        POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        POSTGRES_DB: ${POSTGRES_DB}
        POSTGRES_HOST: ${POSTGRES_HOST}
        DEV_CLIENT_ID: ${DEV_CLIENT_ID}
        DEV_CLIENT_SECRET: ${DEV_CLIENT_SECRET}
        DEV_REDIRECT_URL_AFTER_LOGIN: ${DEV_REDIRECT_URL_AFTER_LOGIN}
        PROD_CLIENT_ID: ${PROD_CLIENT_ID}
        PROD_CLIENT_SECRET: ${PROD_CLIENT_SECRET}
        PROD_REDIRECT_URL_AFTER_LOGIN: ${PROD_REDIRECT_URL_AFTER_LOGIN}
        JWT_Token: ${JWT_Token}
        Account_ID: ${Account_ID}
        TWITCH_STREAMER_ID: ${TWITCH_STREAMER_ID}
        TWITCH_STREAMER_SECRET: ${TWITCH_STREAMER_SECRET}
    image: ghcr.io/ra1n-42/miwi/app_backend:latest
    restart: unless-stopped
    # depends_on:
    #   mysql_server:
    #     condition: service_healthy
    ports:
      - "8000:8000"

  frontend:
    build:
      context: ./frontend
    image: ghcr.io/ra1n-42/miwi/frontend:latest
    environment:
      - VITE_API_BASE_URL=http://app_backend:8000

    depends_on:
      - app_backend
    restart: unless-stopped


